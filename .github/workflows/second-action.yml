#give your workflow a name
name: Second Workflow

#Define when your workflow must be executed/triggered
on: push

# allow commits with GITHUB_TOKEN; PAT still needed for cross-repo push
permissions:
  contents: write

#define jobs
jobs: 
  # first job
  second-job: 
    runs-on: ubuntu-latest
    steps:
      - name: get code from repo
        uses: actions/checkout@v4

      - name: List files in project
        run: ls -la

      - name: Set up JDK 21 (Amazon Corretto)
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: '21'
          cache: maven

      - name: Build & Run Tests
        run: |
          cd workflows
          mvn -B -ntp clean install

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: workflows/target/*.jar

      - name: Complete 
        run: echo "Done -bye"

  # second job that builds & pushes the container
  build-container:
    runs-on: ubuntu-latest
    needs: second-job  # wait for the jar
    steps:
      - name: get code (for Dockerfile)
        uses: actions/checkout@v4

      # bring back the jar to the same path the Dockerfile expects
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: workflows/target

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set short SHA
        run: echo "SHA7=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .   # repo root
          file: workflows/Dockerfile
          push: true
          tags: |
            thebestever535/pipelinetest:${{ env.SHA7 }}
            thebestever535/pipelinetest:latest

  # ðŸ”¹ third job: separate job to update GitOps repo (deploy to dev)
  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build-container
    environment: dev
    steps:
      # recompute short SHA in this job's environment (jobs don't share env)
      - name: Set short SHA
        run: echo "SHA7=${GITHUB_SHA::7}" >> $GITHUB_ENV

      # checkout the GitOps repo into ./gitops
      - name: Checkout GitOps repo
        uses: actions/checkout@v4
        with:
          repository: 214068730/pipeline_gitops
          ref: main
          # PAT with write access to 214068730/pipeline_gitops
          token: ${{ secrets.GITOPS_PAT }}
          path: gitops

      # optional: list files for sanity
      - name: List GitOps repo files
        run: |
          cd gitops
          ls -R

      # update the image tag inside pipeline_app/pipleline.yaml
      - name: Update pipleline.yaml with new short SHA
        run: |
          cd gitops/pipeline_app
          sed -i "s#thebestever535/pipelinetest:.*#thebestever535/pipelinetest:${SHA7}#g" pipleline.yaml
          echo "Updated image tag to ${SHA7}"

      # commit & push the change back to the GitOps repo
      - name: Commit & Push changes
        run: |
          cd gitops
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add pipeline_app/pipleline.yaml
          git commit -m "Update image tag to ${SHA7}"
          git push


  # ðŸ”¹ third job: separate job to update GitOps repo (deploy to dev)
  deploy-to-int:
    runs-on: ubuntu-latest
    needs: build-container
    environment: int
    steps:
      - name: deploy int
        run: echo "deploying to int"

