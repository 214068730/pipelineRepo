#give your workflow a name
name: Second Workflow

#Define when your workflow must be executed/triggered
#kick off build whenever a push happens
#on:
#    push:
#        branches:
#            - 'main'
#            - 'releases/**'
on: push

#define jobs
jobs: 
  #can be anyname its basically the name of your job
  second-job: 
    #what env must your job run on linux, windows etc
    runs-on: ubuntu-latest
    steps:
      - name: get code from repo
        uses: actions/checkout@v4 #remember you running your test on server ubuntu one so you have to get the code on the server  
      - name: List files in project
        run: ls -la

      - name: Set up JDK 21 (Amazon Corretto)
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: '21'
          cache: maven

      - name: Build & Run Tests
        run: |
            cd workflows
            mvn -B -ntp clean install
        # clean = wipe target
        # install = build + test + install into local repo

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-jar
          path: workflows/target/*.jar

      - name: Complete 
        run: echo "Done -bye"
    

    build-container:
    runs-on: ubuntu-latest
    needs: second-job  # wait for the jar
    steps:
      - name: get code (for Dockerfile)
        uses: actions/checkout@v4

      # bring back the jar to the same path the Dockerfile expects
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: spring-boot-jar
          path: workflows/target

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .   # repo root (where Dockerfile is)
          push: true
          tags: thebestever535/pipelinetest:latest

